package mailer_template

// ButtonColor represents the color of the button
type ButtonColor string

// String returns the string representation of the button color
func (c ButtonColor) String() string {
	return string(c)
}

// Predefined button colors
const (
	ButtonColorPrimary   ButtonColor = "#3b82f6" // Blue
	ButtonColorSecondary ButtonColor = "#64748b" // Gray
	ButtonColorSuccess   ButtonColor = "#22c55e" // Green
	ButtonColorDanger    ButtonColor = "#f43f5e" // Red
)

// ButtonAlign represents the alignment of the button
type ButtonAlign string

// String returns the string representation of the button alignment
func (a ButtonAlign) String() string {
	return string(a)
}

// Predefined button alignments
const (
	ButtonAlignLeft   ButtonAlign = "left"
	ButtonAlignCenter ButtonAlign = "center"
	ButtonAlignRight  ButtonAlign = "right"
)

templ Button(color ButtonColor, align ButtonAlign, label, link string) {
	<!-- Custom: center-aligned on mobile only -->
	<table class={ align.String() } cellpadding="0" cellspacing="0" role="presentation" style="margin: 0 auto;">
		<tr>
			<th bgcolor={ color.String() } style="border-radius: 3px; mso-padding-alt: 6px 42px 12px;">
				<a href={ templ.URL(link) } style="color: #FFFFFF; display: inline-block; font-size: 13px; line-height: 100%; padding: 12px 42px; text-decoration: none;">{ label }</a>
			</th>
		</tr>
	</table>
}

templ ButtonPrimary(align ButtonAlign, label, link string) {
	@Button(ButtonColorPrimary, align, label, link)
}

templ ButtonSecondary(align ButtonAlign, label, link string) {
	@Button(ButtonColorSecondary, align, label, link)
}

templ ButtonSuccess(align ButtonAlign, label, link string) {
	@Button(ButtonColorSuccess, align, label, link)
}

templ ButtonDanger(align ButtonAlign, label, link string) {
	@Button(ButtonColorDanger, align, label, link)
}

templ ButtonOutlinedPrimary(align ButtonAlign, label, link string) {
	<!-- Default -->
	<table align={ align.String() } cellpadding="0" cellspacing="0" role="presentation" style="margin: 0 auto;">
		<tr>
			<th style="border: 2px solid #3b82f6; border-radius: 3px; mso-padding-alt: 6px 42px 12px;">
				<a href={ templ.URL(link) } style="color: #3b82f6; display: inline-block; font-size: 13px; line-height: 100%; padding: 12px 42px; text-decoration: none;">{ label }</a>
			</th>
		</tr>
	</table>
}

templ ButtonOutlinedSecondary(align ButtonAlign, label, link string) {
	<!-- Default -->
	<table align={ align.String() } cellpadding="0" cellspacing="0" role="presentation" style="margin: 0 auto;">
		<tr>
			<th style="border: 2px solid #64748b; border-radius: 3px; mso-padding-alt: 6px 42px 12px;">
				<a href={ templ.URL(link) } style="color: #64748b; display: inline-block; font-size: 13px; line-height: 100%; padding: 12px 42px; text-decoration: none;">{ label }</a>
			</th>
		</tr>
	</table>
}

templ ButtonOutlinedSuccess(align ButtonAlign, label, link string) {
	<!-- Default -->
	<table align={ align.String() } cellpadding="0" cellspacing="0" role="presentation" style="margin: 0 auto;">
		<tr>
			<th style="border: 2px solid #22c55e; border-radius: 3px; mso-padding-alt: 6px 42px 12px;">
				<a href={ templ.URL(link) } style="color: #22c55e; display: inline-block; font-size: 13px; line-height: 100%; padding: 12px 42px; text-decoration: none;">{ label }</a>
			</th>
		</tr>
	</table>
}

templ ButtonOutlinedDanger(align ButtonAlign, label, link string) {
	<!-- Default -->
	<table align={ align.String() } cellpadding="0" cellspacing="0" role="presentation" style="margin: 0 auto;">
		<tr>
			<th style="border: 2px solid #f43f5e; border-radius: 3px; mso-padding-alt: 6px 42px 12px;">
				<a href={ templ.URL(link) } style="color: #f43f5e; display: inline-block; font-size: 13px; line-height: 100%; padding: 12px 42px; text-decoration: none;">{ label }</a>
			</th>
		</tr>
	</table>
}
